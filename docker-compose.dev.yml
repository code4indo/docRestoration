# Docker Hub + HuggingFace Integration Configuration
version: '3.8'

services:
  # Main GAN-HTR training service
  gan-htr:
    build:
      context: ./docRestoration
      dockerfile: Dockerfile
    image: jatnikonm/gan-htr:local
    container_name: gan-htr-local
    restart: unless-stopped
    volumes:
      # Local source code mounting
      - ./docRestoration:/workspace
      - ./network:/workspace/network
      
      # Training outputs
      - ./outputs:/workspace/outputs
      - ./logbook:/workspace/logbook
      
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - TF_FORCE_GPU_ALLOW_GROWTH=true
      - PYTHONUNBUFFERED=1
      - HF_HUB_ENABLE_HF_TRANSFER=1
    ports:
      - "5000:5000/tcp"
      - "6006:6006/tcp"
      -8888:8888/tcp"
    tty: true
    stdin_open: true
    
    # Entrypoint handles auto-download or development mode
    entrypoint: "/entrypoint.sh"
    command: ["python3", "/workspace/dual_modal_gan/scripts/train.py"]

  # Development workspace (for local development)
  dev:
    image: python:3.10
    build:
      context: ./docRestoration
      Dockerfile: Dockerfile.dev
      args:
        - PYTHONPATH=/usr/local/bin/python
    working_dir: /workspace/docRestoration
    volumes:
      - ./docRestoration:/workspace/docRestoration
      ./outputs:/workspace/outputs
      - mlruns:/workspace/mlruns
    environment:
      - DEVELOPMENT_MODE=true
      - DEBUG=true
    command: bash
    depends_on:
      - dev-setup

  # Setup service for development dependencies
  dev-setup:
    image: python:3.10
    command: |
      echo "ðŸ”§ Setting up development environment..."
      python3 -m pip install --upgrade pip
      python3 -m pip install huggingface_hub datasets
      python3 -m pip install poetry
      poetry --version
      poetry self update
      poetry install
    volumes:
      - ./docRestoration:/workspace/docRestoration
    environment:
      - DEV_SETUP=true

  # MLflow experiment tracking
  mlflow:
    image: python:3.10
    ports:
      - "5000:5000/tcp"
    volumes:
      - ./mlruns:/mlruns
      - ./outputs:/workspace/outputs
    command: |
      poetry run python3 scripts/download_data.sh
      poetry run python3 scripts/evaluate_cer_wer.py
    depends_on:
      - dev-setup

## Development Environment
services:
  dev-setup:
    <<EOF
services:
      dev:
        image: python:3.10
        command: bash
    volumes:
      - ./docRestoration:/workspace
    volumes:
      - outputs:/workspace/outputs
    environment:
    environment:
      PYTHONPATH: /usr/local/bin:$PATH
    <<EOF
    command: bash
    volumes:
      - ./docRestoration:/workspace
    volumes:
      - outputs:/workspace/outputs
    environment:
    environment:
      PYTHONPATH: /usr/local/bin:$PATH
    <<EOF

name: doc-restoration-dev

volumes:
  docrestoration-data:
    driver: local
    source: /path/to/your/datasets
    target: /workspace/dual_modal_gan/data

networks:
  default:
    driver: bridge
